"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[51676],{95788:(e,n,t)=>{t.d(n,{Iu:()=>s,yg:()=>f});var r=t(11504);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var d=r.createContext({}),c=function(e){var n=r.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=c(e.components);return r.createElement(d.Provider,{value:n},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=c(t),m=o,f=p["".concat(d,".").concat(m)]||p[m]||u[m]||a;return t?r.createElement(f,i(i({ref:n},s),{},{components:t})):r.createElement(f,i({ref:n},s))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=m;var l={};for(var d in n)hasOwnProperty.call(n,d)&&(l[d]=n[d]);l.originalType=e,l[p]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},78020:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=t(45072),o=(t(11504),t(95788));const a={id:"middleware-cors-handling",title:"Middleware CORS Handling Example",sidebar_label:"Middleware CORS Handling"},i=void 0,l={unversionedId:"zio-http/examples/advanced/middleware-cors-handling",id:"zio-http/examples/advanced/middleware-cors-handling",title:"Middleware CORS Handling Example",description:"",source:"@site/docs/zio-http/examples/advanced/middleware-cors-handling.md",sourceDirName:"zio-http/examples/advanced",slug:"/zio-http/examples/advanced/middleware-cors-handling",permalink:"/zio-http/examples/advanced/middleware-cors-handling",draft:!1,editUrl:"https://github.com/zio/zio/edit/series/2.x/docs/zio-http/examples/advanced/middleware-cors-handling.md",tags:[],version:"current",frontMatter:{id:"middleware-cors-handling",title:"Middleware CORS Handling Example",sidebar_label:"Middleware CORS Handling"},sidebar:"ecosystem-sidebar",previous:{title:"Middleware Basic Authentication",permalink:"/zio-http/examples/advanced/middleware-basic-authentication"},next:{title:"Server",permalink:"/zio-http/examples/advanced/server"}},d={},c=[],s={toc:c},p="wrapper";function u(e){let{components:n,...t}=e;return(0,o.yg)(p,(0,r.c)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-scala"},'import zio._\n\nimport zio.http._\nimport zio.http.Header.{AccessControlAllowMethods, AccessControlAllowOrigin, Origin}\nimport zio.http.Middleware.{cors, CorsConfig}\n\nobject HelloWorldWithCORS extends ZIOAppDefault {\n\n  // Create CORS configuration\n  val config: CorsConfig =\n    CorsConfig(\n      allowedOrigin = {\n        case origin @ Origin.Value(_, host, _) if host == "dev" => Some(AccessControlAllowOrigin.Specific(origin))\n        case _                                                  => None\n      },\n      allowedMethods = AccessControlAllowMethods(Method.PUT, Method.DELETE),\n    )\n\n  // Create HTTP route with CORS enabled\n  val app: HttpApp[Any] =\n    Routes(\n      Method.GET / "text" -> handler(Response.text("Hello World!")),\n      Method.GET / "json" -> handler(Response.json("""{"greetings": "Hello World!"}""")),\n    ).toHttpApp @@ cors(config)\n\n  // Run it like any simple app\n  val run =\n    Server.serve(app).provide(Server.default)\n}\n')))}u.isMDXComponent=!0}}]);